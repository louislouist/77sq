import express from 'express';
import { fetchAircraftEmergency, Aircraft } from './fetchAircraftEmergency';

const app = express();
const PORT = 3000;

// Optional: Inject mock data
const mockAircraft: Aircraft[] = [
	{
		hex: 'ABC123',
		flight: 'TEST123',
		lat: 40.7128,
		lon: -74.006,
		alt_baro: 35000,
		gs: 480,
		track: 90,
		squawk: '7700',
		emergency: '7700',
		seen: 5,
	}
];

app.get('/emergency-aircraft', async (req, res) => {
	try {
		// Use live API call
		const response = await fetchAircraftEmergency();

		// If mock mode query param is set, override
		if (req.query.mock === 'true') {
			return res.json({
				ac: mockAircraft,
				msg: 'Mock data served',
				total: mockAircraft.length,
				now: Date.now()
			});
		}

		if (!response || !response.ac) {
			return res.status(503).json({ msg: 'No data available from ADSB endpoint' });
		}

		res.json(response);
	} catch (error) {
		console.error('Server error:', error);
		res.status(500).json({ msg: 'Server error occurred' });
	}
});

app.listen(PORT, () => {
	console.log(`Test server running on http://localhost:${PORT}`);
});
